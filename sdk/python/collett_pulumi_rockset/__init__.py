# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .get_account import *
from .provider import *
from .rockset_alias import *
from .rockset_api_key import *
from .rockset_collection import *
from .rockset_dynamodb_collection import *
from .rockset_dynamodb_integration import *
from .rockset_gcs_collection import *
from .rockset_gcs_integration import *
from .rockset_kafka_collection import *
from .rockset_kafka_integration import *
from .rockset_kinesis_collection import *
from .rockset_kinesis_integration import *
from .rockset_mongodb_collection import *
from .rockset_mongodb_integration import *
from .rockset_query_lambda import *
from .rockset_query_lambda_tag import *
from .rockset_role import *
from .rockset_s3_collection import *
from .rockset_s3_integration import *
from .rockset_user import *
from .rockset_view import *
from .rockset_workspace import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import collett_pulumi_rockset.config as __config
    config = __config
else:
    config = _utilities.lazy_import('collett_pulumi_rockset.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "rockset",
  "mod": "index/rocksetAlias",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetAlias:RocksetAlias": "RocksetAlias"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetApiKey",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetApiKey:RocksetApiKey": "RocksetApiKey"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetCollection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetCollection:RocksetCollection": "RocksetCollection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetDynamodbCollection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetDynamodbCollection:RocksetDynamodbCollection": "RocksetDynamodbCollection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetDynamodbIntegration",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetDynamodbIntegration:RocksetDynamodbIntegration": "RocksetDynamodbIntegration"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetGcsCollection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetGcsCollection:RocksetGcsCollection": "RocksetGcsCollection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetGcsIntegration",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetGcsIntegration:RocksetGcsIntegration": "RocksetGcsIntegration"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetKafkaCollection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetKafkaCollection:RocksetKafkaCollection": "RocksetKafkaCollection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetKafkaIntegration",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetKafkaIntegration:RocksetKafkaIntegration": "RocksetKafkaIntegration"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetKinesisCollection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetKinesisCollection:RocksetKinesisCollection": "RocksetKinesisCollection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetKinesisIntegration",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetKinesisIntegration:RocksetKinesisIntegration": "RocksetKinesisIntegration"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetMongodbCollection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetMongodbCollection:RocksetMongodbCollection": "RocksetMongodbCollection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetMongodbIntegration",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetMongodbIntegration:RocksetMongodbIntegration": "RocksetMongodbIntegration"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetQueryLambda",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetQueryLambda:RocksetQueryLambda": "RocksetQueryLambda"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetQueryLambdaTag",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetQueryLambdaTag:RocksetQueryLambdaTag": "RocksetQueryLambdaTag"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetRole",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetRole:RocksetRole": "RocksetRole"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetS3Collection",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetS3Collection:RocksetS3Collection": "RocksetS3Collection"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetS3Integration",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetS3Integration:RocksetS3Integration": "RocksetS3Integration"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetUser",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetUser:RocksetUser": "RocksetUser"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetView",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetView:RocksetView": "RocksetView"
  }
 },
 {
  "pkg": "rockset",
  "mod": "index/rocksetWorkspace",
  "fqn": "collett_pulumi_rockset",
  "classes": {
   "rockset:index/rocksetWorkspace:RocksetWorkspace": "RocksetWorkspace"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "rockset",
  "token": "pulumi:providers:rockset",
  "fqn": "collett_pulumi_rockset",
  "class": "Provider"
 }
]
"""
)
