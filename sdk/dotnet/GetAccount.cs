// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Collett.Rockset
{
    public static class GetAccount
    {
        /// <summary>
        /// Gets information about the Rockset deployment for the specified api server.
        /// </summary>
        public static Task<GetAccountResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("rockset:index/getAccount:getAccount", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// The AWS account ID to reference in AWS policies.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The Rockset clusters available to this API key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccountClusterResult> Clusters;
        /// <summary>
        /// The external ID to use in AWS trust policies.
        /// </summary>
        public readonly string ExternalId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the organization for the API key.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The name of the Rockset user used for AWS trust policies.
        /// </summary>
        public readonly string RocksetUser;

        [OutputConstructor]
        private GetAccountResult(
            string accountId,

            ImmutableArray<Outputs.GetAccountClusterResult> clusters,

            string externalId,

            string id,

            string organization,

            string rocksetUser)
        {
            AccountId = accountId;
            Clusters = clusters;
            ExternalId = externalId;
            Id = id;
            Organization = organization;
            RocksetUser = rocksetUser;
        }
    }
}
