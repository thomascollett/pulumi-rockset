// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.collett.pulumi.rockset.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RocksetGcsCollectionSourceCsv {
    private @Nullable List<String> columnNames;
    private @Nullable List<String> columnTypes;
    private @Nullable String encoding;
    private @Nullable String escapeChar;
    private @Nullable Boolean firstLineAsColumnNames;
    private @Nullable String quoteChar;
    private @Nullable String separator;

    private RocksetGcsCollectionSourceCsv() {}
    public List<String> columnNames() {
        return this.columnNames == null ? List.of() : this.columnNames;
    }
    public List<String> columnTypes() {
        return this.columnTypes == null ? List.of() : this.columnTypes;
    }
    public Optional<String> encoding() {
        return Optional.ofNullable(this.encoding);
    }
    public Optional<String> escapeChar() {
        return Optional.ofNullable(this.escapeChar);
    }
    public Optional<Boolean> firstLineAsColumnNames() {
        return Optional.ofNullable(this.firstLineAsColumnNames);
    }
    public Optional<String> quoteChar() {
        return Optional.ofNullable(this.quoteChar);
    }
    public Optional<String> separator() {
        return Optional.ofNullable(this.separator);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RocksetGcsCollectionSourceCsv defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> columnNames;
        private @Nullable List<String> columnTypes;
        private @Nullable String encoding;
        private @Nullable String escapeChar;
        private @Nullable Boolean firstLineAsColumnNames;
        private @Nullable String quoteChar;
        private @Nullable String separator;
        public Builder() {}
        public Builder(RocksetGcsCollectionSourceCsv defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnNames = defaults.columnNames;
    	      this.columnTypes = defaults.columnTypes;
    	      this.encoding = defaults.encoding;
    	      this.escapeChar = defaults.escapeChar;
    	      this.firstLineAsColumnNames = defaults.firstLineAsColumnNames;
    	      this.quoteChar = defaults.quoteChar;
    	      this.separator = defaults.separator;
        }

        @CustomType.Setter
        public Builder columnNames(@Nullable List<String> columnNames) {
            this.columnNames = columnNames;
            return this;
        }
        public Builder columnNames(String... columnNames) {
            return columnNames(List.of(columnNames));
        }
        @CustomType.Setter
        public Builder columnTypes(@Nullable List<String> columnTypes) {
            this.columnTypes = columnTypes;
            return this;
        }
        public Builder columnTypes(String... columnTypes) {
            return columnTypes(List.of(columnTypes));
        }
        @CustomType.Setter
        public Builder encoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }
        @CustomType.Setter
        public Builder escapeChar(@Nullable String escapeChar) {
            this.escapeChar = escapeChar;
            return this;
        }
        @CustomType.Setter
        public Builder firstLineAsColumnNames(@Nullable Boolean firstLineAsColumnNames) {
            this.firstLineAsColumnNames = firstLineAsColumnNames;
            return this;
        }
        @CustomType.Setter
        public Builder quoteChar(@Nullable String quoteChar) {
            this.quoteChar = quoteChar;
            return this;
        }
        @CustomType.Setter
        public Builder separator(@Nullable String separator) {
            this.separator = separator;
            return this;
        }
        public RocksetGcsCollectionSourceCsv build() {
            final var o = new RocksetGcsCollectionSourceCsv();
            o.columnNames = columnNames;
            o.columnTypes = columnTypes;
            o.encoding = encoding;
            o.escapeChar = escapeChar;
            o.firstLineAsColumnNames = firstLineAsColumnNames;
            o.quoteChar = quoteChar;
            o.separator = separator;
            return o;
        }
    }
}
