// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.collett.pulumi.rockset.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RocksetGcsIntegrationState extends com.pulumi.resources.ResourceArgs {

    public static final RocksetGcsIntegrationState Empty = new RocksetGcsIntegrationState();

    /**
     * Text describing the integration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Text describing the integration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Unique identifier for the integration. Can contain alphanumeric or dash characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique identifier for the integration. Can contain alphanumeric or dash characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The GCP service account key JSON.
     * 
     */
    @Import(name="serviceAccountKey")
    private @Nullable Output<String> serviceAccountKey;

    /**
     * @return The GCP service account key JSON.
     * 
     */
    public Optional<Output<String>> serviceAccountKey() {
        return Optional.ofNullable(this.serviceAccountKey);
    }

    private RocksetGcsIntegrationState() {}

    private RocksetGcsIntegrationState(RocksetGcsIntegrationState $) {
        this.description = $.description;
        this.name = $.name;
        this.serviceAccountKey = $.serviceAccountKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RocksetGcsIntegrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RocksetGcsIntegrationState $;

        public Builder() {
            $ = new RocksetGcsIntegrationState();
        }

        public Builder(RocksetGcsIntegrationState defaults) {
            $ = new RocksetGcsIntegrationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Text describing the integration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Text describing the integration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Unique identifier for the integration. Can contain alphanumeric or dash characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique identifier for the integration. Can contain alphanumeric or dash characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceAccountKey The GCP service account key JSON.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountKey(@Nullable Output<String> serviceAccountKey) {
            $.serviceAccountKey = serviceAccountKey;
            return this;
        }

        /**
         * @param serviceAccountKey The GCP service account key JSON.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountKey(String serviceAccountKey) {
            return serviceAccountKey(Output.of(serviceAccountKey));
        }

        public RocksetGcsIntegrationState build() {
            return $;
        }
    }

}
