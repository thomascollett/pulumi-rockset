// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.collett.pulumi.rockset.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RocksetGcsCollectionSourceXmlArgs extends com.pulumi.resources.ResourceArgs {

    public static final RocksetGcsCollectionSourceXmlArgs Empty = new RocksetGcsCollectionSourceXmlArgs();

    @Import(name="attributePrefix")
    private @Nullable Output<String> attributePrefix;

    public Optional<Output<String>> attributePrefix() {
        return Optional.ofNullable(this.attributePrefix);
    }

    @Import(name="docTag")
    private @Nullable Output<String> docTag;

    public Optional<Output<String>> docTag() {
        return Optional.ofNullable(this.docTag);
    }

    @Import(name="encoding")
    private @Nullable Output<String> encoding;

    public Optional<Output<String>> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    @Import(name="rootTag")
    private @Nullable Output<String> rootTag;

    public Optional<Output<String>> rootTag() {
        return Optional.ofNullable(this.rootTag);
    }

    @Import(name="valueTag")
    private @Nullable Output<String> valueTag;

    public Optional<Output<String>> valueTag() {
        return Optional.ofNullable(this.valueTag);
    }

    private RocksetGcsCollectionSourceXmlArgs() {}

    private RocksetGcsCollectionSourceXmlArgs(RocksetGcsCollectionSourceXmlArgs $) {
        this.attributePrefix = $.attributePrefix;
        this.docTag = $.docTag;
        this.encoding = $.encoding;
        this.rootTag = $.rootTag;
        this.valueTag = $.valueTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RocksetGcsCollectionSourceXmlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RocksetGcsCollectionSourceXmlArgs $;

        public Builder() {
            $ = new RocksetGcsCollectionSourceXmlArgs();
        }

        public Builder(RocksetGcsCollectionSourceXmlArgs defaults) {
            $ = new RocksetGcsCollectionSourceXmlArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributePrefix(@Nullable Output<String> attributePrefix) {
            $.attributePrefix = attributePrefix;
            return this;
        }

        public Builder attributePrefix(String attributePrefix) {
            return attributePrefix(Output.of(attributePrefix));
        }

        public Builder docTag(@Nullable Output<String> docTag) {
            $.docTag = docTag;
            return this;
        }

        public Builder docTag(String docTag) {
            return docTag(Output.of(docTag));
        }

        public Builder encoding(@Nullable Output<String> encoding) {
            $.encoding = encoding;
            return this;
        }

        public Builder encoding(String encoding) {
            return encoding(Output.of(encoding));
        }

        public Builder rootTag(@Nullable Output<String> rootTag) {
            $.rootTag = rootTag;
            return this;
        }

        public Builder rootTag(String rootTag) {
            return rootTag(Output.of(rootTag));
        }

        public Builder valueTag(@Nullable Output<String> valueTag) {
            $.valueTag = valueTag;
            return this;
        }

        public Builder valueTag(String valueTag) {
            return valueTag(Output.of(valueTag));
        }

        public RocksetGcsCollectionSourceXmlArgs build() {
            return $;
        }
    }

}
