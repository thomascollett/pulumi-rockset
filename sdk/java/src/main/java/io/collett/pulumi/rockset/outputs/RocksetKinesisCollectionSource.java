// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.collett.pulumi.rockset.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RocksetKinesisCollectionSource {
    /**
     * @return AWS region name for the Kinesis stream, by default us-west-2 is used
     * 
     */
    private @Nullable String awsRegion;
    /**
     * @return Set of fields that correspond to a DMS primary key. Can only be set if format is mysql or postgres.
     * 
     */
    private @Nullable List<String> dmsPrimaryKeys;
    /**
     * @return Format of the data. One of: json, mysql, postgres. dms*primary*keys list can only be set for mysql or postgres.
     * 
     */
    private String format;
    /**
     * @return The name of the Rockset Kinesis integration.
     * 
     */
    private String integrationName;
    /**
     * @return Name of Kinesis stream.
     * 
     */
    private String streamName;

    private RocksetKinesisCollectionSource() {}
    /**
     * @return AWS region name for the Kinesis stream, by default us-west-2 is used
     * 
     */
    public Optional<String> awsRegion() {
        return Optional.ofNullable(this.awsRegion);
    }
    /**
     * @return Set of fields that correspond to a DMS primary key. Can only be set if format is mysql or postgres.
     * 
     */
    public List<String> dmsPrimaryKeys() {
        return this.dmsPrimaryKeys == null ? List.of() : this.dmsPrimaryKeys;
    }
    /**
     * @return Format of the data. One of: json, mysql, postgres. dms*primary*keys list can only be set for mysql or postgres.
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return The name of the Rockset Kinesis integration.
     * 
     */
    public String integrationName() {
        return this.integrationName;
    }
    /**
     * @return Name of Kinesis stream.
     * 
     */
    public String streamName() {
        return this.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RocksetKinesisCollectionSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String awsRegion;
        private @Nullable List<String> dmsPrimaryKeys;
        private String format;
        private String integrationName;
        private String streamName;
        public Builder() {}
        public Builder(RocksetKinesisCollectionSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsRegion = defaults.awsRegion;
    	      this.dmsPrimaryKeys = defaults.dmsPrimaryKeys;
    	      this.format = defaults.format;
    	      this.integrationName = defaults.integrationName;
    	      this.streamName = defaults.streamName;
        }

        @CustomType.Setter
        public Builder awsRegion(@Nullable String awsRegion) {
            this.awsRegion = awsRegion;
            return this;
        }
        @CustomType.Setter
        public Builder dmsPrimaryKeys(@Nullable List<String> dmsPrimaryKeys) {
            this.dmsPrimaryKeys = dmsPrimaryKeys;
            return this;
        }
        public Builder dmsPrimaryKeys(String... dmsPrimaryKeys) {
            return dmsPrimaryKeys(List.of(dmsPrimaryKeys));
        }
        @CustomType.Setter
        public Builder format(String format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        @CustomType.Setter
        public Builder integrationName(String integrationName) {
            this.integrationName = Objects.requireNonNull(integrationName);
            return this;
        }
        @CustomType.Setter
        public Builder streamName(String streamName) {
            this.streamName = Objects.requireNonNull(streamName);
            return this;
        }
        public RocksetKinesisCollectionSource build() {
            final var o = new RocksetKinesisCollectionSource();
            o.awsRegion = awsRegion;
            o.dmsPrimaryKeys = dmsPrimaryKeys;
            o.format = format;
            o.integrationName = integrationName;
            o.streamName = streamName;
            return o;
        }
    }
}
