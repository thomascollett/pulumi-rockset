// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.collett.pulumi.rockset.outputs;

import com.pulumi.core.annotations.CustomType;
import io.collett.pulumi.rockset.outputs.GetAccountCluster;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountResult {
    /**
     * @return The AWS account ID to reference in AWS policies.
     * 
     */
    private String accountId;
    /**
     * @return The Rockset clusters available to this API key.
     * 
     */
    private List<GetAccountCluster> clusters;
    /**
     * @return The external ID to use in AWS trust policies.
     * 
     */
    private String externalId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the organization for the API key.
     * 
     */
    private String organization;
    /**
     * @return The name of the Rockset user used for AWS trust policies.
     * 
     */
    private String rocksetUser;

    private GetAccountResult() {}
    /**
     * @return The AWS account ID to reference in AWS policies.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The Rockset clusters available to this API key.
     * 
     */
    public List<GetAccountCluster> clusters() {
        return this.clusters;
    }
    /**
     * @return The external ID to use in AWS trust policies.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the organization for the API key.
     * 
     */
    public String organization() {
        return this.organization;
    }
    /**
     * @return The name of the Rockset user used for AWS trust policies.
     * 
     */
    public String rocksetUser() {
        return this.rocksetUser;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private List<GetAccountCluster> clusters;
        private String externalId;
        private String id;
        private String organization;
        private String rocksetUser;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.clusters = defaults.clusters;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.organization = defaults.organization;
    	      this.rocksetUser = defaults.rocksetUser;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder clusters(List<GetAccountCluster> clusters) {
            this.clusters = Objects.requireNonNull(clusters);
            return this;
        }
        public Builder clusters(GetAccountCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder organization(String organization) {
            this.organization = Objects.requireNonNull(organization);
            return this;
        }
        @CustomType.Setter
        public Builder rocksetUser(String rocksetUser) {
            this.rocksetUser = Objects.requireNonNull(rocksetUser);
            return this;
        }
        public GetAccountResult build() {
            final var o = new GetAccountResult();
            o.accountId = accountId;
            o.clusters = clusters;
            o.externalId = externalId;
            o.id = id;
            o.organization = organization;
            o.rocksetUser = rocksetUser;
            return o;
        }
    }
}
