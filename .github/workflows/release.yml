# WARNING: This file is autogenerated.
# With NodeJS installed, rerun with `npx @pulumi/github-workflows pulumi-generate-provider-workflows`
# Changes will be overwritten if not made via https://github.com/pulumi/build-automation

name: release
on:
  push:
    tags:
    - v*.*.*
    - "!v*.*.*-**"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: rockset
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  TRAVIS_OS_NAME: linux

  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  GOVERSION: 1.20.x
  NODEVERSION: 16.x
  PYTHONVERSION: "3.9"
  DOTNETVERSION: 6.0
  JAVAVERSION: "11"

jobs:
  prerequisites:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        lfs: true
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GOVERSION }}
        cache-dependency-path: |
          provider/go.sum
          sdk/go.sum
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v4
    - name: Build tfgen & provider binaries
      run: make provider
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace }}/bin/ pulumi-resource-${{ env.PROVIDER }}
        pulumi-tfgen-${{ env.PROVIDER }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
    name: prerequisites
  build_sdk:
    needs: prerequisites
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
        - java
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        lfs: true
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GOVERSION }}
        cache-dependency-path: |
          provider/go.sum
          sdk/go.sum
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v4
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVAVERSION }}
        distribution: temurin
        cache: gradle
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: "7.6"
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: UnTar provider binaries
      run: tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin
    - name: Restore Binary Permissions
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Install plugins
      run: make install_plugins
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
    - name: Set PACKAGE_VERSION to Env
      run: echo "PACKAGE_VERSION=$(pulumictl get version --language generic)" >> $GITHUB_ENV
    - name: Build SDK
      run: make build_${{ matrix.language }}
    - name: Check worktree clean
      run: ./ci-scripts/ci/check-worktree-is-clean
    - name: Compress SDK folder
      run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    name: build_sdk
  publish:
    needs: build_sdk
    runs-on: ubuntu-latest
    name: publish
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v4
    - name: Set PreRelease Version
      run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        args: -p 3 release --rm-dist --timeout 60m0s
        version: latest
  publish_sdk:
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        lfs: true
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v4
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Download python SDK
      uses: actions/download-artifact@v3
      with:
        name: python-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress python SDK
      run: tar -zxf ${{github.workspace}}/sdk/python.tar.gz -C ${{github.workspace}}/sdk/python
    - name: Download dotnet SDK
      uses: actions/download-artifact@v3
      with:
        name: dotnet-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress dotnet SDK
      run: tar -zxf ${{github.workspace}}/sdk/dotnet.tar.gz -C ${{github.workspace}}/sdk/dotnet
    - name: Download nodejs SDK
      uses: actions/download-artifact@v3
      with:
        name: nodejs-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress nodejs SDK
      run: tar -zxf ${{github.workspace}}/sdk/nodejs.tar.gz -C ${{github.workspace}}/sdk/nodejs
    - run: python -m pip install pip twine
    - name: Install Twine
      run: python -m pip install pip twine
    - name: Publish SDKs
      run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      name: publish_sdk
  
    publish_java_sdk:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: publish
    name: publish_java_sdk
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        lfs: true
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v2
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVAVERSION }}
        distribution: temurin
        cache: gradle
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: "7.6"
    - name: Download java SDK
      uses: actions/download-artifact@v3
      with:
        name: java-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress java SDK
      run: tar -zxf ${{github.workspace}}/sdk/java.tar.gz -C
        ${{github.workspace}}/sdk/java
    - name: Set PACKAGE_VERSION to Env
      run: echo "PACKAGE_VERSION=$(pulumictl get version --language generic)" >>
        $GITHUB_ENV
    - name: Publish Java SDK
      uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
      with:
        arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
        build-root-directory: ./sdk/java
        gradle-version: 7.4.1
  tag_sdk:
    runs-on: ubuntu-latest
    needs: publish_sdk
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        lfs: true
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Add SDK version tag
      run: git tag sdk/v$(pulumictl get version --language generic) && git push origin
        sdk/v$(pulumictl get version --language generic)
    name: tag_sdk
